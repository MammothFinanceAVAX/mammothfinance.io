{"version":3,"sources":["hooks/useRefresh.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","state/hooks.ts","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","state/actions.ts","components/UnlockButton.tsx","config/constants/types.ts","config/constants/contracts.ts","views/Referral/Referral.tsx","contexts/BlockContext.tsx","components/Input/Input.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useReferralCount.ts","utils/addressHelpers.ts","utils/multicall.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","utils/web3.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","views/ComingSoon/ComingSoon.tsx","App.tsx","state/index.ts","Providers.tsx","index.tsx","components/layout/Container.tsx","components/layout/Page.tsx","contexts/Localisation/translationsContext.ts"],"names":["useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","CHAIN_ID","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","console","log","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenSymbol","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","_dec","lpSymbol","multipliedBy","toFixed","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","pid","masterchefABI","info","totalAllocPoint","eggPerBlock","allocPoint","_hex","poolWeight","toJSON","lpTotal","balance","toNumber","multiplier","toString","depositFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","variableRegex","getTranslation","translations","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","TranslationsContext","length","ZERO","useFetchPublicData","useDispatch","useEffect","useFarms","useSelector","useFarmFromPid","useFarmUser","usePriceBnbBusd","usePriceCakeBusd","bnbPriceUSD","useTotalValue","bnbPrice","cakePrice","value","i","val","quoteTokenSymbol","QuoteToken","BNB","CAKE","plus","nodes","process","getNodeUrl","randomIndex","random","React","createContext","RefreshContextProvider","children","useState","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","UnlockButton","props","TranslateString","useWallet","connect","reset","onPresentConnectModal","useWalletModal","onClick","PoolCategory","cake","43114","97","masterChef","wbnb","lottery","lotteryNFT","mulltiCall","busd","referral","StyledFarmStakingCard","styled","Card","Block","img","theme","colors","textSubtle","Referral","referralCount","ReferralCount","convertAddress","acc","b64","Buffer","from","as","size","color","mb","style","textAlign","fontSize","marginBottom","placeholder","onChange","evt","target","width","paddingLeft","disabled","variant","navigator","clipboard","writeText","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","web3","getWeb3","eth","getBlockNumber","blockNumber","current","StyledInputWrapper","input","radii","default","spacing","StyledInput","primary","Input","endAdornment","startAdornment","StyledCardBody","CardBody","StyledHeading","Heading","IconWrapper","UnlockWalletCard","isActive","src","alt","height","marginTop","marginRight","useReferralCount","setBalance","cakeContract","getContract","referralAbi","getReferralAddress","methods","referralsCount","call","bal","fethReferralCount","getCakeAddress","addresses","chainId","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","abi","multi","Contract","MultiCallAbi","itf","Interface","calldata","toLowerCase","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","pools","nonBnbPools","poolsConfig","filter","p","stakingTokenName","bnbPools","nonMasterPools","sousId","masterChefContract","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","allowances","reduce","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingTusk","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","contracts","BUSD","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","contractOptions","GlobalStyle","createGlobalStyle","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","setTranslations","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","cakePriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","Page","PageLoader","ComingSoon","margin","float","top","right","position","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","path","exact","tokenMode","component","memo","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","Container","mediaQueries","sm","lg","defaultTranslationState"],"mappings":"wHAAA,oBAQeA,IALI,WACjB,MAAuBC,qBAAWC,KAClC,MAAO,CAAEC,YADT,EAAQC,KACoBC,YAD5B,EAAcC,Q,0NCMVC,EAAW,MAwJFC,EArJC,uCAAG,4BAAAC,EAAA,sEACEC,QAAQC,IACzBC,IAAYC,IAAZ,uCAAgB,WAAOC,GAAP,2DAAAL,EAAA,6DACRM,EAAWD,EAAWE,YAAYT,OAElCU,EAAQ,CAEZ,CACEC,QAASJ,EAAWK,eAAeZ,OACnCa,KAAM,YACNC,OAAQ,CAACN,IAGX,CACEG,QAASJ,EAAWQ,mBAAmBf,OACvCa,KAAM,YACNC,OAAQ,CAACN,IAGX,CACEG,QAASJ,EAAWS,YAAcT,EAAWK,eAAeZ,OAAYQ,EACxEK,KAAM,YACNC,OAAQ,CAACG,gBAGX,CACEN,QAASH,EACTK,KAAM,eAGR,CACEF,QAASJ,EAAWK,eAAeZ,OACnCa,KAAM,YAGR,CACEF,QAASJ,EAAWQ,mBAAmBf,OACvCa,KAAM,aAGVK,QAAQC,IAAInB,EAAU,SAtCR,SA+CJoB,YAAUC,EAAOX,GA/Cb,0CAyCZY,EAzCY,KA0CZC,EA1CY,KA2CZC,EA3CY,KA4CZC,EA5CY,KA6CZC,EA7CY,KA8CZC,EA9CY,KAsDXpB,EAAWS,aACZE,QAAQC,IAAI,cAAeZ,EAAWqB,aAEtCC,EAAc,IAAIC,IAAUN,GAAkBO,IAAI,IAAID,IAAU,IAAIE,IAAIN,IAC1C,SAA3BnB,EAAWqB,aAAqD,SAA3BrB,EAAWqB,aAAqD,QAA3BrB,EAAWqB,aACzD,WAA3BrB,EAAWqB,aAAuD,WAA3BrB,EAAWqB,aAAuD,UAA3BrB,EAAWqB,aAC9D,WAA3BrB,EAAWqB,aAAuD,WAA3BrB,EAAWqB,aAAuD,UAA3BrB,EAAWqB,YAE3FK,EAAoB,IAAIH,IAAU,IAE9BI,EAAO,GACgB,SAAxB3B,EAAW4B,UAA+C,WAAxB5B,EAAW4B,UAAiD,WAAxB5B,EAAW4B,WAClFD,EAAO,GACkB,OAAxB3B,EAAW4B,WACZD,EAAO,GACTD,EAAoB,IAAIH,IACpBH,EAAqB,GACjB,IAAIG,IAAUP,GAAoBa,aAAa,IAAIN,IAAU,IAAIE,IAAIE,EAAKP,IAAqBU,UAC7Fd,GACRQ,IAAI,IAAID,IACNR,KAGNgB,EAAsBT,EAAYU,MAAMN,KAIlCO,EAAe,IAAIV,IAAUN,GAAkBO,IAAI,IAAID,IAAUL,IAIvEa,EAAsB,IAAIR,IAAUP,GACjCQ,IAAI,IAAID,IAAU,IAAIE,IAAIL,IAC1BY,MAAM,IAAIT,IAAU,IACpBS,MAAMC,GAGTX,EAAc,IAAIC,IAAUR,GAAgBS,IAAI,IAAID,IAAU,IAAIE,IAAIN,IAAgBa,MAAMC,GACtFC,EAAmB,IAAIX,IAAUP,GACpCQ,IAAI,IAAID,IAAU,IAAIE,IAAIL,IAC1BY,MAAMC,GAENX,EAAYa,WAAW,GAAK,GAC7BT,EAAoBQ,EAAiBV,IAAIF,GACtCtB,EAAWoC,MAIdV,EAAoB,IAAIH,IAAUP,GAAoBQ,IAAI,IAAID,IAAUR,IAAiBc,aAAa,MACnG7B,EAAWoC,MAvGJ,UA8GqCvB,YAAUwB,EAAe,CAC1E,CACEjC,QAASM,cACTJ,KAAM,WACNC,OAAQ,CAACP,EAAWoC,MAEtB,CACEhC,QAASM,cACTJ,KAAM,mBAER,CACEF,QAASM,cACTJ,KAAM,kBA1HI,2CA8GPgC,EA9GO,KA8GDC,EA9GC,KA8GgBC,EA9GhB,KA+HRC,EAAa,IAAIlB,IAAUe,EAAKG,WAAWC,MAC3CC,EAAaF,EAAWjB,IAAI,IAAID,IAAUgB,IAhIlC,6CAmITvC,GAnIS,IAoIZsB,YAAaA,EAAYsB,SAEzBC,QAAS,IAAItB,IAAUN,EAAiB6B,QAAQJ,MAAMZ,UACtDC,oBAAqBA,EAAoBa,SACzClB,kBAAmBA,EAAkBkB,SACrCD,WAAYA,EAAWI,WACvBC,WAAW,GAAD,OAAKP,EAAWjB,IAAI,KAAKyB,WAAzB,KACVC,aAAcZ,EAAKY,aACnBV,YAAa,IAAIjB,IAAUiB,GAAaO,cA5I5B,4CAAhB,wDAFe,cACXI,EADW,yBAkJVA,GAlJU,2CAAH,qDCHHC,EAAuB,uCAAG,WAAOC,GAAP,qBAAA1D,EAAA,6DAC/B2D,EAAmB5C,cAEnBP,EAAQL,IAAYC,KAAI,SAACwD,GAE7B,MAAO,CAAEnD,QADiBmD,EAAK9C,YAAc8C,EAAKlD,eAAeZ,OAAY8D,EAAKrD,YAAYT,OACzDa,KAAM,YAAaC,OAAQ,CAAC8C,EAASC,OALvC,SAQPzC,YAAU2C,EAAUrD,GARb,cAQ/BsD,EAR+B,OAS/BC,EAAqBD,EAAgB1D,KAAI,SAAC4D,GAC9C,OAAO,IAAIpC,IAAUoC,GAAWf,YAVG,kBAY9Bc,GAZ8B,2CAAH,sDAevBE,EAA0B,uCAAG,WAAOP,GAAP,mBAAA1D,EAAA,6DAClCQ,EAAQL,IAAYC,KAAI,SAACwD,GAE7B,MAAO,CACLnD,QAFwBmD,EAAK9C,YAAc8C,EAAKlD,eAAeZ,OAAY8D,EAAKrD,YAAYT,OAG5Fa,KAAM,YACNC,OAAQ,CAAC8C,OAN2B,SAUTxC,YAAU2C,EAAUrD,GAVX,cAUlC0D,EAVkC,OAWlCC,EAAsBD,EAAiB9D,KAAI,SAACgE,GAChD,OAAO,IAAIxC,IAAUwC,GAAcnB,YAZG,kBAcjCkB,GAdiC,2CAAH,sDAiB1BE,EAA2B,uCAAG,WAAOX,GAAP,qBAAA1D,EAAA,6DACnC2D,EAAmB5C,cAEnBP,EAAQL,IAAYC,KAAI,SAACwD,GAC7B,MAAO,CACLnD,QAASkD,EACThD,KAAM,WACNC,OAAQ,CAACgD,EAAKnB,IAAKiB,OAPkB,SAWTxC,YAAUwB,EAAelC,GAXhB,cAWnC8D,EAXmC,OAYnCC,EAAuBD,EAAkBlE,KAAI,SAACoE,GAClD,OAAO,IAAI5C,IAAU4C,EAAc,GAAGzB,MAAME,YAbL,kBAelCsB,GAfkC,2CAAH,sDAkB3BE,EAAqB,uCAAG,WAAOf,GAAP,qBAAA1D,EAAA,6DAC7B2D,EAAmB5C,cAEnBP,EAAQL,IAAYC,KAAI,SAACwD,GAC7B,MAAO,CACLnD,QAASkD,EACThD,KAAM,cACNC,OAAQ,CAACgD,EAAKnB,IAAKiB,OAPY,SAWTxC,YAAUwB,EAAelC,GAXhB,cAW7BkE,EAX6B,OAY7BC,EAAiBD,EAAYtE,KAAI,SAACwE,GACtC,OAAO,IAAIhD,IAAUgD,GAAU3B,YAbE,kBAe5B0B,GAf4B,2CAAH,sDChD5BE,EAA2B,CAAErB,KAAK,YAAKrD,MAEhC2E,EAAaC,YAAY,CACpCpE,KAAM,QACNkE,eACAG,SAAU,CACRC,mBAAoB,SAACC,EAAOC,GAC1B,IAAMC,EAAwBD,EAAOE,QACrCrE,QAAQC,IAAImE,GACZF,EAAM1B,KAAO0B,EAAM1B,KAAKpD,KAAI,SAACwD,GAC3B,IAAM0B,EAAeF,EAAcG,MAAK,SAACC,GAAD,OAAOA,EAAE/C,MAAQmB,EAAKnB,OAC9D,OAAO,2BAAKmB,GAAS0B,OAGzBG,gBAAiB,SAACP,EAAOC,GACYA,EAAOE,QAAlCK,uBACeC,SAAQ,SAACC,GAC9B,IAAQC,EAAUD,EAAVC,MACRX,EAAM1B,KAAKqC,GAAX,2BAAyBX,EAAM1B,KAAKqC,IAApC,IAA4CC,SAAUF,WAOvD,EAAgDd,EAAWiB,QAAnDd,EAAR,EAAQA,mBAAoBQ,EAA5B,EAA4BA,gBAGtBO,EAA4B,yDAAM,WAAOC,GAAP,eAAAjG,EAAA,sEACzBD,IADyB,OACvCmG,EADuC,OAE7CD,EAAShB,EAAmBiB,IAFiB,2CAAN,uDAI5BC,EAAyB,SAACzC,GAAD,8CAAa,WAAOuC,GAAP,uBAAAjG,EAAA,sEAChByD,EAAwBC,GADR,cAC3C0C,EAD2C,gBAEbnC,EAA2BP,GAFd,cAE3C2C,EAF2C,gBAGhBhC,EAA4BX,GAHZ,cAG3C4C,EAH2C,iBAIlB7B,EAAsBf,GAJJ,QAI3C6C,EAJ2C,OAM3Cb,EAAyBU,EAAmBhG,KAAI,SAACoG,EAAeX,GACpE,MAAO,CACLA,QACAY,UAAWL,EAAmBP,GAC9BzB,aAAciC,EAAsBR,GACpCrB,cAAe8B,EAAmBT,GAClCjB,SAAU2B,EAAiBV,OAI/BI,EAASR,EAAgB,CAAEC,4BAhBsB,4CAAb,uDAmBvBZ,MAAf,S,oDC5DM4B,EAAgB,UASTC,EAAiB,SAACC,EAA0BC,EAAuBC,GAC9E,IAAMC,EAAmBH,EAAarB,MAAK,SAACyB,GAC1C,OAAOA,EAAYxD,KAAKyD,WAAaJ,KAEvC,GAAIE,EAAkB,CACpB,IAAMG,EAAmBH,EAAiBvD,KAAK2D,KAE/C,OADyBD,EAAiBE,SAAS,KAb1B,SAACL,EAA0BD,GACtD,IAAMO,EAAkBX,EAAcY,KAAKP,GAAkB,GAEvDQ,EAAuBT,EAASU,MAAM,KAAK,GACjD,OAAOT,EAAiBU,QAAQJ,EAAiBE,GAWtCG,CAAqBR,EAAkBJ,GAEzCI,EAET,OAAOJ,GCNMa,IAdC,WACd,IAAQf,EAAiBpH,qBAAWoI,KAA5BhB,aAER,OAAO,SAACC,EAAuBC,GAC7B,MAAwB,UAApBF,EAAa,GACRE,EAELF,EAAaiB,OAAS,EACjBlB,EAAeC,EAAcC,EAAeC,GAE9CA,K,iCCdX,4SAQMgB,EAAO,IAAIlG,IAAU,GAGdmG,EAAqB,WAChC,IAAM9B,EAAW+B,cACTpI,EAAgBL,cAAhBK,YACRqI,qBAAU,WACRhC,EAASD,iBAER,CAACC,EAAUrG,KAKHsI,EAAW,WAEtB,OADcC,aAAY,SAACjD,GAAD,OAAkBA,EAAMgB,MAAM1C,SAI7C4E,EAAiB,SAAC3F,GAE7B,OADa0F,aAAY,SAACjD,GAAD,OAAkBA,EAAMgB,MAAM1C,KAAK+B,MAAK,SAACC,GAAD,OAAOA,EAAE/C,MAAQA,SASvE4F,EAAc,SAAC5F,GAC1B,IAAMmB,EAAOwE,EAAe3F,GAE5B,MAAO,CACLgE,UAAW7C,EAAKkC,SAAW,IAAIlE,IAAUgC,EAAKkC,SAASW,WAAa,IAAI7E,IAAU,GAClFwC,aAAcR,EAAKkC,SAAW,IAAIlE,IAAUgC,EAAKkC,SAAS1B,cAAgB,IAAIxC,IAAU,GACxF4C,cAAeZ,EAAKkC,SAAW,IAAIlE,IAAUgC,EAAKkC,SAAStB,eAAiB,IAAI5C,IAAU,GAC1FgD,SAAUhB,EAAKkC,SAAW,IAAIlE,IAAUgC,EAAKkC,SAASlB,UAAY,IAAIhD,IAAU,KA2BvE0G,EAAkB,WAC7B,IACM1E,EAAOwE,EADD,GAEZ,OAAOxE,EAAK7B,kBAAoB,IAAIH,IAAUgC,EAAK7B,mBAAqB+F,GAG7DS,EAAmB,WAC9B,IACMC,EAAcF,IAEd1E,EAAOwE,EAHD,GAIZ,OAAOxE,EAAK7B,kBAAoByG,EAAYnG,MAAMuB,EAAK7B,mBAAqB+F,GAMjEW,EAAgB,WAK3B,IAJA,IAAMvC,EAAQgC,IACRQ,EAAWJ,IACXK,EAAYJ,IACdK,EAAQ,IAAIhH,IAAU,GACjBiH,EAAI,EAAGA,EAAI3C,EAAM2B,OAAQgB,IAAK,CACrC,IAAMjF,EAAOsC,EAAM2C,GACnB,GAAIjF,EAAKxB,oBAAqB,CAC5B,IAAI0G,OAAG,EAELA,EADElF,EAAKmF,mBAAqBC,IAAWC,IAChCP,EAASrG,MAAMuB,EAAKxB,qBACnBwB,EAAKmF,mBAAqBC,IAAWE,KACtCP,EAAUtG,MAAMuB,EAAKxB,qBAErBwB,EAAKxB,oBAEdwG,EAAQA,EAAMO,KAAKL,IAGvB,OAAOF,I,iCC3GT,sBAGMQ,EAAQ,CAACC,wCAA8BA,wCAA8BA,yCAO5DC,IALI,WACjB,IAAMC,EAAcC,IAAO,EAAGJ,EAAMvB,OAAS,GAC7C,OAAOuB,EAAMG,K,gKCFT9J,EAAiBgK,IAAMC,cAAc,CAAE7J,KAAM,EAAGF,KAAM,IAGtDgK,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,EAAwBC,mBAAS,GAAjC,mBAAOhK,EAAP,KAAaiK,EAAb,KACA,EAAwBD,mBAAS,GAAjC,mBAAOlK,EAAP,KAAaoK,EAAb,KAgBA,OAdA9B,qBAAU,WACR,IAAM+B,EAAWC,YAAW,sBAAC,sBAAAjK,EAAA,sDAC3B+J,GAAQ,SAACG,GAAD,OAAUA,EAAO,KADE,2CAXX,KAclB,OAAO,kBAAMC,cAAcH,MAC1B,IAEH/B,qBAAU,WACR,IAAM+B,EAAWC,YAAW,sBAAC,sBAAAjK,EAAA,sDAC3B8J,GAAQ,SAACI,GAAD,OAAUA,EAAO,KADE,2CAjBX,KAoBlB,OAAO,kBAAMC,cAAcH,MAC1B,IAEI,cAACvK,EAAe2K,SAAhB,CAAyBxB,MAAO,CAAE/I,OAAMF,QAAxC,SAAiDiK,M,iCC1B1D,sR,oFCiBeS,IAZM,SAACC,GACpB,IAAMC,EAAkB5C,cACxB,EAA2B6C,cAAnBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MACTC,EAA0BC,YAAeH,EAASC,GAAlDC,sBAER,OACE,cAAC,IAAD,yBAAQE,QAASF,GAA2BL,GAA5C,aACGC,EAAgB,IAAK,sB,gCCSrB,IAAKvB,EASA8B,EATZ,oE,SAAY9B,K,UAAAA,E,YAAAA,E,cAAAA,E,YAAAA,E,UAAAA,E,WAAAA,M,cASA8B,K,sBAAAA,E,YAAAA,E,mBAAAA,M,sCC9BG,KACbC,KAAM,CACJC,MAAO,6CACPC,GAAI,IAENC,WAAY,CACVF,MAAO,6CACPC,GAAI,IAENE,KAAM,CACJH,MAAO,6CACPC,GAAI,IAENG,QAAS,CACPJ,MAAO,GACPC,GAAI,IAENI,WAAY,CACVL,MAAO,GACPC,GAAI,IAENK,WAAY,CACVN,MAAO,6CACPC,GAAI,IAENM,KAAM,CACJP,MAAO,6CACPC,GAAI,IAENO,SAAU,CACRR,MAAO,6CACPC,GAAI,M,6yNCXFQ,EAAwBC,YAAOC,IAAPD,CAAH,mMAQrBE,EAAQF,IAAO7J,IAAV,wEAKO6J,IAAOG,IAAV,oDAIDH,IAAO7J,IAAV,+DACA,qBAAGiK,MAAkBC,OAAOC,cAIvBN,IAAO7J,IAAV,iDAoEEoK,IAhEY,WACvB,IAAQvI,EAAY8G,cAAZ9G,QACFwI,EAAgBC,cAAgBhK,QAAQ,GAMxCiK,EAAiB,SAACC,GACpB,IAAMC,EAAMC,EAAOC,KAAKH,GAAK/I,SAAS,UACtC,MAAM,sCAAN,OAA6CgJ,IAGjD,OACI,mCAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAASG,GAAG,KAAKC,KAAK,KAAKC,MAAM,UAAUC,GAAG,OAAOC,MAAO,CAAEC,UAAW,SAAUC,SAAS,OAA5F,sCAGA,cAACtB,EAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAASiB,KAAK,KAAKE,GAAG,OAAOC,MAAO,CAACC,UAAU,SAAUC,SAAS,QAAlE,yGAGA,cAACnB,EAAD,UACMlI,EAGE,qCAAE,oBAAImJ,MAAO,CAACC,UAAU,SAAUE,aAAa,OAAQD,SAAS,QAA9D,iCACF,cAAC,IAAD,CACIE,YAAY,IACZrE,MAAOwD,EAAe1I,GACtBwJ,SA7BX,SAACC,GACYA,EAAIC,OAA1BxE,SA8BZ,uBACwB,qBAAKiE,MAAO,CAACQ,MAAO,OAAOC,YAAa,SAAxC,SACY,cAAC,IAAD,CACIT,MAAO,CAACQ,MAAM,OAClBE,UAAU,EACVb,KAAK,KACLc,QAAQ,YACRR,aAAa,OACbnC,QAAO,sBAAE,sBAAA7K,EAAA,sDACLyN,UAAUC,UAAUC,UAAUvB,EAAe1I,IADxC,2CANT,oBAaJ,uBACA,qBAAImJ,MAAO,CAACC,UAAW,UAAvB,6BAAmDZ,QAxBvD,cAAC,IAAD,mB,wwFCtE1B0B,EAAenE,IAAMC,cAAc,GAEnCmE,EAAuB,SAAC,GAAkB,IAAhBjE,EAAe,EAAfA,SACxBkE,EAAgBC,iBAAO,GAC7B,EAA0BlE,mBAAS,GAAnC,mBAAOmE,EAAP,KAAcC,EAAd,KAeA,OAbAhG,qBAAU,WACR,IAAMiG,EAAOC,cACPnE,EAAWC,YAAW,sBAAC,4BAAAjK,EAAA,sEACDkO,EAAKE,IAAIC,iBADR,QACrBC,EADqB,UAEPR,EAAcS,UAChCT,EAAcS,QAAUD,EACxBL,EAASK,IAJgB,2CAM1B,KAEH,OAAO,kBAAMnE,cAAcH,MAC1B,IAEI,cAAC4D,EAAaxD,SAAd,CAAuBxB,MAAOoF,EAA9B,SAAsCpE,M,wGCDzC4E,EAAqB9C,IAAO7J,IAAV,6JAEF,SAACyI,GAAD,OAAWA,EAAMwB,MAAMC,OAAO0C,SACjC,SAACnE,GAAD,OAAWA,EAAMwB,MAAM4C,MAAMC,WAGjC,SAACrE,GAAD,OAAWA,EAAMwB,MAAM8C,QAAQ,MAGxCC,EAAcnD,IAAO+C,MAAV,8LAIN,SAACnE,GAAD,OAAWA,EAAMwB,MAAMC,OAAO+C,WAS1BC,EAhCqB,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,aAAc9B,EAAmD,EAAnDA,SAAUD,EAAyC,EAAzCA,YAAagC,EAA4B,EAA5BA,eAAgBrG,EAAY,EAAZA,MAC1F,OACE,eAAC4F,EAAD,aACKS,GAAkBA,EACrB,cAACJ,EAAD,CAAa5B,YAAaA,EAAarE,MAAOA,EAAOsE,SAAUA,MAC5D8B,GAAgBA,O,u1GCVnBE,EAAiBxD,YAAOyD,IAAPzD,CAAH,6HAOd0D,EAAgB1D,YAAO2D,IAAP3D,CAAH,+CAIb4D,EAAc5D,IAAO7J,IAAV,+EAuBF0N,IAhBU,WACvB,IAAMhF,EAAkB5C,cAExB,OACE,cAAC,IAAD,CAAM6H,UAAQ,EAAd,SACE,eAACN,EAAD,WACE,cAACI,EAAD,UACE,qBAAKG,IAAI,yBAAyBC,IAAI,gBAAgB7C,MAAO,CAAC8C,OAAO,OAAQC,UAAW,OAAQC,YAAa,YAE/G,cAACT,EAAD,CAAe1C,KAAK,KAApB,SAA0BnC,EAAgB,IAAK,gDAC/C,cAAC,IAAD,W,uICFOuF,IArBiB,WAC5B,IAAQpM,EAAY8G,cAAZ9G,QACR,EAA8BmG,mBAAS,IAAIjI,IAAU,IAArD,mBAAOuB,EAAP,KAAgB4M,EAAhB,KACQnQ,EAAgBL,cAAhBK,YAeR,OAbAqI,qBAAU,WACHvE,GACwB,uCAAG,8BAAA1D,EAAA,6DAChBgQ,EAAeC,YAAYC,EAAaC,eADxB,SAEJH,EAAaI,QAAQC,eAAe3M,GAAS4M,OAFzC,OAEhBC,EAFgB,OAGtBvP,QAAQC,IAAI,UAAWsP,GACvBR,EAAW,IAAInO,IAAU2O,IAJH,2CAAH,oDAOvBC,KAEL,CAAC9M,EAAS9D,IAENuD,I,gCC7BX,0PAKasN,EAAiB,WAC5B,OAAOC,IAAU3F,KAAK4F,QAEX5P,EAAuB,WAClC,OAAO2P,IAAUxF,WAAWyF,QAEjBC,EAAsB,WACjC,OAAOF,IAAUpF,WAAWqF,QAEjBE,EAAiB,WAC5B,OAAOH,IAAUvF,KAAKwF,QAEXG,EAAoB,WAC/B,OAAOJ,IAAUtF,QAAQuF,QAEdI,EAA0B,WACrC,OAAOL,IAAUrF,WAAWsF,QAEjBR,EAAqB,WAChC,OAAOO,IAAUlF,SAASmF,S,8FCZtBzP,EAAS,uCAAG,WAAO8P,EAAYxQ,GAAnB,2BAAAR,EAAA,6DACVkO,EAAOC,cACP8C,EAAQ,IAAI/C,EAAKE,IAAI8C,SAAUC,EAAqCP,eACpEQ,EAAM,IAAIC,IAAUL,GAC1BhQ,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,SAENqQ,EAAW9Q,EAAMJ,KAAI,SAACkQ,GAAD,MAAU,CAACA,EAAK7P,QAAQ8Q,cAAeH,EAAII,mBAAmBlB,EAAK3P,KAAM2P,EAAK1P,YAPzF,SAQaqQ,EAAMb,QAAQqB,UAAUH,GAAUhB,OAR/C,uBAQRoB,EARQ,EAQRA,WACFC,EAAMD,EAAWtR,KAAI,SAACkQ,EAAMzH,GAAP,OAAauI,EAAIQ,qBAAqBpR,EAAMqI,GAAGlI,KAAM2P,MAThE,kBAWTqB,GAXS,4CAAH,wDAcAzQ,O,wTCaA2Q,IArCa,I,+nBCatBC,EAAcC,IAAYC,QAAO,SAACC,GAAD,OAAOA,EAAEC,mBAAqBlJ,IAAWC,OAC1EkJ,EAAWJ,IAAYC,QAAO,SAACC,GAAD,OAAOA,EAAEC,mBAAqBlJ,IAAWC,OACvEmJ,EAAiBL,IAAYC,QAAO,SAACC,GAAD,OAAoB,IAAbA,EAAEI,UAC7CnE,EAAOC,cACPmE,EAAqB,IAAIpE,EAAKE,IAAI8C,SAAUqB,EAAsCxR,eAE3EyR,EAAmB,uCAAG,WAAO9O,GAAP,iBAAA1D,EAAA,6DAC3BQ,EAAQsR,EAAY1R,KAAI,SAAC6R,GAAD,MAAQ,CACpCxR,QAASwR,EAAEQ,oBACX9R,KAAM,YACNC,OAAQ,CAAC8C,EAASuO,EAAES,gBAAgB5S,YAJL,SAORoB,YAAU2C,EAAUrD,GAPZ,cAO3BmS,EAP2B,yBAQ1Bb,EAAYc,QACjB,SAACvG,EAAKwG,EAAMhN,GAAZ,mBAAC,eAA2BwG,GAA5B,kBAAkCwG,EAAKR,OAAS,IAAIzQ,IAAU+Q,EAAW9M,IAAQ5C,aACjF,KAV+B,2CAAH,sDAcnB6P,EAAiB,uCAAG,WAAOpP,GAAP,uBAAA1D,EAAA,6DAEzBQ,EAAQsR,EAAY1R,KAAI,SAAC6R,GAAD,MAAQ,CACpCxR,QAASwR,EAAEQ,oBACX9R,KAAM,YACNC,OAAQ,CAAC8C,OALoB,SAOAxC,YAAU2C,EAAUrD,GAPpB,cAOzBuS,EAPyB,OAQzBC,EAAgBlB,EAAYc,QAChC,SAACvG,EAAKwG,EAAMhN,GAAZ,mBAAC,eAA2BwG,GAA5B,kBAAkCwG,EAAKR,OAAS,IAAIzQ,IAAUmR,EAAiBlN,IAAQ5C,aACvF,IAV6B,SAcNiL,EAAKE,IAAI6E,WAAWvP,GAdd,cAczBwP,EAdyB,OAezBC,EAAchB,EAASS,QAC3B,SAACvG,EAAKwG,GAAN,mBAAC,eAAoBxG,GAArB,kBAA2BwG,EAAKR,OAAS,IAAIzQ,IAAUsR,GAAYjQ,aACnE,IAjB6B,6CAoBnB+P,GAAkBG,IApBC,4CAAH,sDAuBjBC,EAAsB,uCAAG,WAAO1P,GAAP,uBAAA1D,EAAA,6DAC9BQ,EAAQ4R,EAAehS,KAAI,SAAC6R,GAAD,MAAQ,CACvCxR,QAASwR,EAAES,gBAAgB5S,OAC3Ba,KAAM,WACNC,OAAQ,CAAC8C,OAJyB,SAMbxC,YAAUmS,EAAa7S,GANV,cAM9B8S,EAN8B,OAO9BC,EAAiBnB,EAAeQ,QACpC,SAACvG,EAAKwG,EAAMhN,GAAZ,mBAAC,eACIwG,GADL,kBAEGwG,EAAKR,OAAS,IAAIzQ,IAAU0R,EAASzN,GAAO2N,OAAOzQ,MAAME,aAE5D,IAZkC,SAgBOqP,EAAmBlC,QAAQkD,SAAS,IAAK5P,GAAS4M,OAhBzD,uBAgBpBmD,EAhBoB,EAgB5BD,OAhB4B,6CAkBxBD,GAlBwB,IAkBRG,EAAG,IAAI9R,IAAU6R,GAAkBxQ,YAlB3B,4CAAH,sDAqBtB0Q,EAAuB,uCAAG,WAAOjQ,GAAP,qBAAA1D,EAAA,6DAC/BQ,EAAQ4R,EAAehS,KAAI,SAAC6R,GAAD,MAAQ,CACvCxR,QAASwR,EAAES,gBAAgB5S,OAC3Ba,KAAM,gBACNC,OAAQ,CAAC8C,OAJ0B,SAMnBxC,YAAUmS,EAAa7S,GANJ,cAM/BmR,EAN+B,OAO/BiC,EAAiBxB,EAAeQ,QACpC,SAACvG,EAAKwG,EAAMhN,GAAZ,mBAAC,eACIwG,GADL,kBAEGwG,EAAKR,OAAS,IAAIzQ,IAAU+P,EAAI9L,IAAQ5C,aAE3C,IAZmC,SAgBTqP,EAAmBlC,QAAQyD,YAAY,IAAKnQ,GAAS4M,OAhB5C,cAgB/BwD,EAhB+B,oDAkBzBF,GAlByB,IAkBTF,EAAG,IAAI9R,IAAUkS,GAAe7Q,YAlBvB,2CAAH,sDCnE9B4B,EAA2B,CAAErB,KAAK,YAAKuO,MAEhCgC,EAAahP,YAAY,CACpCpE,KAAM,QACNkE,eACAG,SAAU,CACRgP,mBAAoB,SAAC9O,EAAOC,GAC1B,IAAM8O,EAAwB9O,EAAOE,QACrCH,EAAM1B,KAAO0B,EAAM1B,KAAKpD,KAAI,SAACyS,GAC3B,IAAMqB,EAAeD,EAAc1O,MAAK,SAAC4O,GAAD,OAAWA,EAAM9B,SAAWQ,EAAKR,UACzE,OAAO,2BAAKQ,GAASqB,OAGzBE,iBAAkB,SAAClP,EAAOC,GACxB,IAAMW,EAAWX,EAAOE,QACxBH,EAAM1B,KAAO0B,EAAM1B,KAAKpD,KAAI,SAACyS,GAC3B,IAAMwB,EAAevO,EAASP,MAAK,SAAC4O,GAAD,OAAWA,EAAM9B,SAAWQ,EAAKR,UACpE,OAAO,2BAAKQ,GAAZ,IAAkB/M,SAAUuO,QAGhCC,oBAAqB,SAACpP,EAAOC,GAC3B,MAAiCA,EAAOE,QAAhCkP,EAAR,EAAQA,MAAO3L,EAAf,EAAeA,MAAOyJ,EAAtB,EAAsBA,OAChBxM,EAAQX,EAAM1B,KAAKgR,WAAU,SAACvC,GAAD,OAAOA,EAAEI,SAAWA,KACvDnN,EAAM1B,KAAKqC,GAAX,2BAAyBX,EAAM1B,KAAKqC,IAApC,IAA4CC,SAAS,2BAAMZ,EAAM1B,KAAKqC,GAAOC,UAAzB,kBAAoCyO,EAAQ3L,UAM/F,EAAsEmL,EAAWhO,QAArDqO,GAA5B,EAAQJ,mBAAR,EAA4BI,kBAAkBE,EAA9C,EAA8CA,oBAmBxCG,EAA0B,SAAC/Q,GAAD,8CAAa,WAAOuC,GAAP,uBAAAjG,EAAA,sEACzBwS,EAAoB9O,GADK,cAC5CiP,EAD4C,gBAEfG,EAAkBpP,GAFH,cAE5CgR,EAF4C,gBAGrBtB,EAAuB1P,GAHF,cAG5C6P,EAH4C,iBAIrBI,EAAwBjQ,GAJH,QAI5CkQ,EAJ4C,OAM5C9N,EAAWiM,IAAY3R,KAAI,SAACyS,GAAD,MAAW,CAC1CR,OAAQQ,EAAKR,OACb5L,UAAWkM,EAAWE,EAAKR,QAC3BsC,oBAAqBD,EAAqB7B,EAAKR,QAC/C7N,cAAe+O,EAAeV,EAAKR,QACnCyB,cAAeF,EAAef,EAAKR,YAGrCpM,EAASmO,EAAiBtO,IAdwB,4CAAb,uDAiB1B8O,EAAsB,SAACvC,EAAgB3O,GAAjB,8CAAqC,WAAOuC,GAAP,eAAAjG,EAAA,sEAC7CwS,EAAoB9O,GADyB,OAChEiP,EADgE,OAEtE1M,EAASqO,EAAoB,CAAEjC,SAAQkC,MAAO,YAAa3L,MAAO+J,EAAWN,MAFP,2CAArC,uDAKtBwC,EAAoB,SAACxC,EAAgB3O,GAAjB,8CAAqC,WAAOuC,GAAP,eAAAjG,EAAA,sEACxC8S,EAAkBpP,GADsB,OAC9DsP,EAD8D,OAEpE/M,EAASqO,EAAoB,CAAEjC,SAAQkC,MAAO,sBAAuB3L,MAAOoK,EAAcX,MAFtB,2CAArC,uDAKpByC,EAA0B,SAACzC,EAAgB3O,GAAjB,8CAAqC,WAAOuC,GAAP,eAAAjG,EAAA,sEAC7CoT,EAAuB1P,GADsB,OACpE6P,EADoE,OAE1EtN,EAASqO,EAAoB,CAAEjC,SAAQkC,MAAO,gBAAiB3L,MAAO2K,EAAelB,MAFX,2CAArC,uDAK1B0C,EAA0B,SAAC1C,EAAgB3O,GAAjB,8CAAqC,WAAOuC,GAAP,eAAAjG,EAAA,sEAC7C2T,EAAwBjQ,GADqB,OACpEkQ,EADoE,OAE1E3N,EAASqO,EAAoB,CAAEjC,SAAQkC,MAAO,gBAAiB3L,MAAOgL,EAAevB,MAFX,2CAArC,uDAKxB0B,MAAf,S,gCCjGA,oBAGM7N,EAAsB,CAC1B,CACEzD,IAAK,EACLuS,KAAM,EACN/S,SAAU,gBACV1B,YAAa,CACX0K,GAAI,GAEJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GAEJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,MAEhC,CACE1I,IAAK,EACLuS,KAAM,EACN/S,SAAU,iBACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAEhC,CACE9I,IAAK,EACLuS,KAAM,EACN/S,SAAU,kBACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAGhC,CACE9I,IAAK,EACLuS,KAAM,EACN/S,SAAU,kBACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,MACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAGhC,CACE9I,IAAK,EACLuS,KAAM,EACN/S,SAAU,mBACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAGhC,CACE9I,IAAK,EACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,OACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAIhC,CACE9I,IAAK,EACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,QACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,QACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAIhC,CACE9I,IAAK,EACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,SACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAEhC,CACE9I,IAAK,EACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,SACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAGhC,CACE9I,IAAK,EACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,QACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,MACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAGhC,CACE9I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,SACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,MAGhC,CACE1I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,SACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,MAKhC,CACE1I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,MACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,MACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,MAEhC,CACE1I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,MACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,MACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAGhC,CACE9I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,SACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,OACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,MAEhC,CACE1I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,UACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,QACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,MAGhC,CACE1I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,KACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,KACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWkM,KAC7BrU,mBAAoBoU,IAAU1J,MAEhC,CACE9I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,MACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,MACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,MAEhC,CACE1I,IAAK,GACLuS,KAAM,EACNlU,aAAa,EACbmB,SAAU,KACV1B,YAAa,CACX0K,GAAI,GACJD,MAAO,8CAETtJ,YAAa,KACbhB,eAAgB,CACduK,GAAI,GACJD,MAAO,8CAETjC,iBAAkBC,IAAWC,IAC7BpI,mBAAoBoU,IAAU9J,OAInBjF,O,oDCrVf,mGAMMiP,EAAUC,cACVC,EAAe,IAAIC,IAAKC,UAAUC,aAAaL,EAAS,CAAEM,QAAS,MAKnEtH,EAAU,WAEd,OADa,IAAImH,IAAKD,IAGlBpF,EAAc,SAACe,EAAUvQ,EAAiBiV,GAE9C,OAAO,IADMvH,IACGC,IAAI8C,UAAUF,EAA4BvQ,EAASiV,K,o0ECKtDC,EAdKC,YAAH,2LAKO,qBAAG9J,MAAkBC,OAAO8J,c,QCdvCC,EAAK,CAAEC,KAAM,KAAMC,SAAU,WA8B7BC,EAAe,CAC1BH,G,gCC1BII,EAAY,sBAcZC,EAAkB1M,IAAMC,cAAc,CAC1C0M,iBAAkBN,EAClBO,oBAAqB,aACrBC,mBAAoBR,EACpBS,sBAAuB,eAanBC,GATYC,SAASpN,yUAAYqN,6BACT,IAAIC,qBAAmB,CACnDC,MAAOvN,yUAAYwN,2BAOW,SAAC,GAAkB,IAAhBjN,EAAe,EAAfA,SACjC,EAAgDC,mBAAciM,GAA9D,mBAAOM,EAAP,KAAyBC,EAAzB,KACA,EAAoDxM,mBAAciM,GAAlE,mBAAOQ,EAAP,KAA2BC,EAA3B,KACA,EAAwC1M,mBAAqB,IAA7D,mBAAOjD,EAAP,KAAqBkQ,EAArB,KAQA7O,qBAAU,WACR,IAAM8O,EAAiBC,aAAaC,QAAQf,GAC5C,GAAIa,EAAgB,CAClB,IAAMG,EATY,SAACH,GACrB,OAAOd,EAAajE,QAAO,SAACgE,GAC1B,OAAOA,EAASD,OAASgB,KACxB,GAMkBI,CAAcJ,GACjCV,EAAoBa,QAEpBb,EAAoBP,KAErB,IAEH7N,qBAAU,WACJmO,IACFpV,QAAQC,IAAR,uCAA6CmV,EAAiBL,KAA9D,YACAqB,MAAM,UAAD,OAAWhB,EAAiBL,KAA5B,UACFsB,MAAK,SAAAC,GAAC,OAAEA,EAAEC,UAEVF,MAAK,SAACG,GACDA,EAAuBhU,KAAKqE,OAAS,EACvCiP,EAAgB,CAAC,UAEjBA,EAAgBU,EAAuBhU,SAG1C6T,MAAK,kBAAMd,EAAsBH,MACjCqB,OAAM,SAACC,GACN1W,QAAQ2W,MAAM,SACd3W,QAAQ2W,MAAMD,GACdZ,EAAgB,CAAC,gBAGtB,CAACV,EAAkBU,IAOtB,OACE,cAACX,EAAgB/L,SAAjB,CACExB,MAAO,CAAEwN,mBAAkBC,oBAPF,SAACuB,GAC5BvB,EAAoBuB,GACpBZ,aAAaa,QAAQ3B,EAAW0B,EAAW7B,OAK6BO,qBAAoBC,yBAD5F,SAGE,cAAC,IAAoBnM,SAArB,CAA8BxB,MAAO,CAAEhC,eAAckQ,mBAArD,SAAyElN,QCpFzEsM,EAAY,UAEZ4B,EAAerO,IAAMC,cAAc,CAAEqO,OAAQ,KAAMC,YAAa,kBAAM,QAEtEC,EAAuB,SAAC,GAAkB,IAAhBrO,EAAe,EAAfA,SAC9B,EAA4BC,oBAAS,WACnC,IAAMqO,EAAoBlB,aAAaC,QAAQf,GAC/C,QAAOgC,GAAoBC,KAAKC,MAAMF,MAFxC,mBAAOH,EAAP,KAAeM,EAAf,KAYA,OACE,cAACP,EAAa1N,SAAd,CAAuBxB,MAAO,CAAEmP,SAAQC,YARtB,WAClBK,GAAU,SAACC,GAET,OADAtB,aAAaa,QAAQ3B,EAAWiC,KAAKI,WAAWD,KACxCA,OAKV,SACE,cAAC,IAAD,CAAiBxM,MAAOiM,EAASS,IAAOC,IAAxC,SAAgD7O,OCbvC8O,EANE,WACf,MAAgClZ,qBAAWsY,GAE3C,MAAO,CAAEC,OAFT,EAAQA,OAESC,YAFjB,EAAgBA,YAEclM,MADhBtM,qBAAWmZ,O,QCsDZC,EA1Da,CAC1B,CACEC,MAAO,OACPC,KAAM,WACNC,KAAM,KAER,CACEF,MAAO,QACPC,KAAM,YACNE,MAAO,CACL,CACEH,MAAO,WACPE,KAAM,kGAER,CACEF,MAAO,YACPE,KAAM,yFAIZ,CACEF,MAAO,QACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,UACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,YACPC,KAAM,aACNC,KAAM,cAER,CACEF,MAAO,iBACPC,KAAM,UACNC,KAAM,QAGR,CACEF,MAAO,QACPC,KAAM,YACNC,KAAM,yDAER,CACEF,MAAO,OACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,UACPE,KAAM,wDCpBCE,EAxBF,SAAC3O,GACZ,MAAoCE,cAA5B9G,EAAR,EAAQA,QAAS+G,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAC1B,EAAkDlL,qBAAW2W,GAArDC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,oBAC1B,EAAgCqC,IAAxBX,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YACVkB,EAAe3Q,cAErB,OACE,cAAC,IAAD,aACE7E,QAASA,EACTyV,MAAO1O,EACP2O,OAAQ1O,EACRqN,OAAQA,EACRC,YAAaA,EACbqB,YAAajD,GAAoBA,EAAiBL,KAClDuD,MAAOrD,EACPsD,QAASlD,EACT6C,aAAcA,EAAa9V,WAC3BoW,MAAOZ,EACPa,UAAS,8DAAyDhJ,gBAC9DnG,K,QCxBJoP,EAAUhO,YAAOiO,IAAPjO,CAAH,kGAcEkO,EARc,WAC3B,OACE,cAACF,EAAD,UACE,cAAC,IAAD,OCeSG,EAbc,WACzB,OACI,eAACF,EAAA,EAAD,WACI,cAAC,IAAD,CAASlN,GAAG,KAAKC,KAAK,KAAKC,MAAM,UAAUC,GAAG,OAAOC,MAAO,CAAEC,UAAW,SAAUC,SAAS,OAA5F,0BAIC,qBAAK0C,IAAI,yBAAyBC,IAAI,eAAe7C,MAAO,CAACQ,MAAM,QAASsC,OAAQ,OAAQmK,OAAO,OAAQC,MAAM,QAASC,IAAK,OAAOC,MAAO,OAC9HC,SAAU,kB,SCVhCC,EAAOC,gBAAK,kBAAM,qEAClBC,EAAQD,gBAAK,kBAAM,sEAInBE,EAAWF,gBAAK,kBAAM,kCAI5BxY,IAAUgX,OAAO,CACf2B,eAAgB,IAChBC,eAAgB,KAUlB,IAAMC,EAAgB,SAACnQ,GACrB,MAA6BE,cAArB9G,EAAR,EAAQA,QAAS+G,EAAjB,EAAiBA,QAejB,OAXExC,qBAAU,YACLvE,GAAWgX,OAAO1D,aAAaC,QAAQ,kBAC1CxM,EAAQ,cAEP,CAAC/G,EAAS+G,IAIf1C,cAIE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC4S,EAAD,IACA,cAAC,EAAD,UACE,cAAC,WAAD,CAAU7T,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8T,KAAK,IAAIC,OAAK,EAArB,SACE,cAACV,EAAD,MAEF,cAAC,IAAD,CAAOS,KAAK,SAAZ,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,CAAOO,KAAK,SAAZ,SACE,cAACP,EAAD,CAAOS,WAAS,MAKjB,cAAC,IAAD,CAAOF,KAAK,OAAZ,SACC,cAAC,EAAD,MAEA,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACI,cAAC3O,EAAA,EAAD,MAgBN,cAAC,IAAD,CAAO8O,UAAWT,eAQf7Q,MAAMuR,KAAKP,G,oEC9FXQ,eAAe,CAC5BC,UAAU7R,EACV8R,QAAS,CACPjV,MAAOkV,IACPvJ,MAAOwJ,OC8BIC,GA1Ba,SAAC,GAAkB,IAAhB1R,EAAe,EAAfA,SACvB2R,EAASnG,cACTzE,EAAU8F,SAASpN,SACzB,OACE,cAAC,IAAD,CAAUmS,MAAOA,GAAjB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,CACE7K,QAASA,EACT8K,WAAY,CACVC,cAAe,CAAEH,UACjBI,OAJJ,SAOE,cAAC/N,EAAA,EAAD,UACE,cAACnO,EAAA,EAAD,UACE,cAAC,IAAD,UAAgBmK,iBCvBhCgS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U,2/OCIXC,EAbGvQ,IAAO7J,IAAV,gNAOX,qBAAGiK,MAAkBoQ,aAAaC,MCNhCxC,EAAOjO,YAAOuQ,EAAPvQ,CAAH,oPAKN,qBAAGI,MAAkBoQ,aAAaC,MAKlC,qBAAGrQ,MAAkBoQ,aAAaE,MAMvBzC,O,upGCnBf,6CAOM0C,EAA4C,CAChDzV,aAAc,GACdkQ,gBAAiB,cAGNlP,EAAsB8B,wBAAc2S,K","file":"static/js/main.c8b16021.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport routerABI from 'config/abi/router.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport {getMasterChefAddress} from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\nimport contracts from \"../../config/constants/contracts\";\n\nconst CHAIN_ID = 43114\n// process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n      console.log(CHAIN_ID, 'chain')\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n\n      // console.log('token decimals', tokenDecimals, quoteTokenDecimals, farmConfig.lpSymbol)\n\n      if(farmConfig.isTokenOnly){\n        console.log('tokenSymbol', farmConfig.tokenSymbol)\n        // console.log(lpTokenBalanceMC)\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farmConfig.tokenSymbol === 'USDC' || farmConfig.tokenSymbol === 'USDT' || farmConfig.tokenSymbol === 'DAI' ||\n            farmConfig.tokenSymbol === 'USDC.e' || farmConfig.tokenSymbol === 'USDT.e' || farmConfig.tokenSymbol === 'DAI.e' ||\n            farmConfig.tokenSymbol === 'USDC.E' || farmConfig.tokenSymbol === 'USDT.E' || farmConfig.tokenSymbol === 'DAI.E'\n        ){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          let _dec = 18;\n          if(farmConfig.lpSymbol === 'WBTC' || farmConfig.lpSymbol === 'WBTC.e' || farmConfig.lpSymbol === 'WBTC.E')\n            _dec = 8;\n          if(farmConfig.lpSymbol === 'GB')\n            _dec = 9;\n          tokenPriceVsQuote = new BigNumber(\n              quoteTokenDecimals < 19 ?\n                  new BigNumber(quoteTokenBlanceLP).multipliedBy(new BigNumber(10).pow(_dec-quoteTokenDecimals)).toFixed()\n                  : quoteTokenBlanceLP\n          ).div(new BigNumber(\n              tokenBalanceLP\n          ));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n          if(farmConfig.pid === 1) {\n            // console.log('heeeere')\n          }\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP)).multipliedBy(1e12);\n          if(farmConfig.pid === 1) {\n            // tokenPriceVsQuote = tokenPriceVsQuote\n          }\n          // console.log('nooo')\n        }\n\n      }\n      const [info, totalAllocPoint, eggPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'tuskPerBlock',\n        },\n      ])\n\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotal: new BigNumber(lpTokenBalanceMC.balance._hex).toFixed(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        eggPerBlock: new BigNumber(eggPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport {stake} from \"../../utils/callHelpers\";\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingTusk',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      console.log(liveFarmsData)\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index]\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\n\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 2 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 0 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  // console.log('bnbPriceUSD', bnbPriceUSD.toFixed())\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  // const pid = 1; // Tusk-BUSD LP\n  // const farm = useFarmFromPid(pid);\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n    }\n  }\n  return value;\n}\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  43114: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","export default {\n  cake: {\n    43114: '0xd47531Df3457EC73Bb11cBEd1bf2fBFB8496a1B2',\n    97: '',\n  },\n  masterChef: {\n    43114: '0xe059262304a6Ba93bd794176d35BF0951956E6e7',\n    97: '',\n  },\n  wbnb: {\n    43114: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n    97: '',\n  },\n  lottery: {\n    43114: '',\n    97: '',\n  },\n  lotteryNFT: {\n    43114: '',\n    97: '',\n  },\n  mulltiCall: {\n    43114: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n    97: '',\n  },\n  busd: {\n    43114: '0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664',\n    97: '',\n  },\n  referral: {\n    43114: '0x5D5b57097b128b17d998D5B26D669d5df43374E5',\n    97: '',\n  }\n}\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport styled from \"styled-components\";\nimport CakeHarvestBalance from \"../Home/components/CakeHarvestBalance\";\nimport CakeWalletBalance from \"../Home/components/CakeWalletBalance\";\nimport UnlockButton from \"../../components/UnlockButton\";\nimport Input from \"../../components/Input\";\nimport UnlockWalletCard from \"../Lottery/components/UnlockWalletCard\";\nimport ReferralCount from \"../../hooks/useReferralCount\";\nimport {Hero4} from \"../../components/layout/Hero2\";\n\n\nconst StyledFarmStakingCard = styled(Card)`\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 276px;\n  z-index: 30;background-color: #fba8010f;;\n    border: 1px solid #FBA801;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n  margin-top:20px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst Referral: React.FC = () => {\n    const { account } = useWallet()\n    const referralCount = ReferralCount().toFixed(0)\n\n    const handleChange = (evt: any) => {\n        const { value: inputValue } = evt.target\n    }\n\n    const convertAddress = (acc: string) => {\n        const b64 = Buffer.from(acc).toString('base64')\n        return `https://mammothfinance.io/#/?ref=0k${b64}`;\n    }\n\n    return (\n        <>\n\n            <Page>\n                <Heading as=\"h2\" size=\"md\" color=\"primary\" mb=\"30px\" style={{ textAlign: 'center', fontSize:'3em'}}>\n                    Mammoth Referral Program\n                </Heading>\n                <StyledFarmStakingCard>\n                    <CardBody>\n                        <Heading size=\"xl\" mb=\"20px\" style={{textAlign:'center', fontSize:'20px'}}>\n                            Share the referral link below to invite your friends and earn 10% of your friends earnings!\n                        </Heading>\n                        <Block>\n                            {!account ? (\n                                <UnlockWalletCard />\n                            ) : (\n                                <><h2 style={{textAlign:'center', marginBottom:'20px', fontSize:'20px'}}>Your referral link:</h2>\n                                <Input\n                                    placeholder=\"0\"\n                                    value={convertAddress(account)}\n                                    onChange={handleChange}\n                                />\n    <br/>\n                            <div style={{width: '100%',paddingLeft: '45.5%'}}>\n                                        <Button\n                                            style={{width:'15%'}}\n                                        disabled={false}\n                                        size='md'\n                                        variant='secondary'\n                                        marginBottom='15px'\n                                        onClick={async () => {\n                                            navigator.clipboard.writeText(convertAddress(account))\n                                        }}\n                                    >\n                                        Copy\n                                    </Button>\n                                </div>\n                                    <br />\n                                    <h3 style={{textAlign: 'center'}}>Your referrals: {referralCount}</h3>\n                                </>\n\n                                )}\n                        </Block>\n\n                    </CardBody>\n                </StyledFarmStakingCard>\n            </Page>\n        </>\n    )\n}\n\nexport default Referral\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <img src=\"/images/egg/banner.png\" alt=\"lottery bunny\" style={{height:'68px', marginTop: '36px', marginRight: '20px'}} />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access your referral link')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport referralAbi from 'config/abi/referral.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport {getCakeAddress, getReferralAddress} from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\n\nexport const useReferralCount = () => {\n    const { account } = useWallet()\n    const [balance, setBalance] = useState(new BigNumber(0))\n    const { slowRefresh } = useRefresh()\n\n    useEffect(() => {\n        if(account) {\n            const fethReferralCount = async () => {\n                const cakeContract = getContract(referralAbi, getReferralAddress())\n                const bal = await cakeContract.methods.referralsCount(account).call()\n                console.log('testttt', bal)\n                setBalance(new BigNumber(bal))\n            }\n\n            fethReferralCount()\n        }\n    }, [account, slowRefresh])\n\n    return balance\n}\n\nexport default useReferralCount\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n// const chainId = 137;\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const getReferralAddress = () => {\n  return addresses.referral[chainId]\n}\n\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  console.log(calls)\n  console.log('calls')\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     43114: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     43114: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingTusk('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'TUSK-WAVAX LP',\n    lpAddresses: {\n      97: '',\n      // replace\n      43114: '0x599427a88f546a7ba0c9346fdf39e224c21749b2',\n    },\n    tokenSymbol: 'TUSK',\n    tokenAddresses: {\n      97: '',\n      // replace\n      43114: '0xd47531Df3457EC73Bb11cBEd1bf2fBFB8496a1B2',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'TUSK-USDC.e LP',\n    lpAddresses: {\n      97: '',\n      43114: '0xc19A423b991BDCAd507f5C074fB39ddDB68eC8f0',\n    },\n    tokenSymbol: 'TUSK',\n    tokenAddresses: {\n      97: '',\n      43114: '0xd47531Df3457EC73Bb11cBEd1bf2fBFB8496a1B2',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 2,\n    risk: 5,\n    lpSymbol: 'WAVAX-USDC.e LP',\n    lpAddresses: {\n      97: '',\n      43114: '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '',\n      43114: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 3,\n    risk: 5,\n    lpSymbol: 'USDC.e-DAI.e LP',\n    lpAddresses: {\n      97: '',\n      43114: '0x63abe32d0ee76c05a11838722a63e012008416e6',\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      43114: '0xd586e7f844cea2f87f50152665bcbc2c279d8d70',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 4,\n    risk: 5,\n    lpSymbol: 'USDC.e-USDT.e LP',\n    lpAddresses: {\n      97: '',\n      43114: '0x2e02539203256c83c7a9f6fa6f8608a32a2b1ca2',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      43114: '0xc7198437980c041c805a1edcba50c1ce5db95118',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 5,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'TUSK',\n    lpAddresses: {\n      97: '',\n      43114: '0xc19A423b991BDCAd507f5C074fB39ddDB68eC8f0',\n    },\n    tokenSymbol: 'TUSK',\n    tokenAddresses: {\n      97: '',\n      43114: '0xd47531Df3457EC73Bb11cBEd1bf2fBFB8496a1B2',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n\n  {\n    pid: 6,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WAVAX',\n    lpAddresses: {\n      97: '',\n      43114: '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n    },\n    tokenSymbol: 'WAVAX',\n    tokenAddresses: {\n      97: '',\n      43114: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n\n  {\n    pid: 7,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'USDT.e',\n    lpAddresses: {\n      97: '',\n      43114: '0x2e02539203256c83c7a9f6fa6f8608a32a2b1ca2',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      43114: '0xc7198437980c041c805a1edcba50c1ce5db95118',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 8,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'USDC.e',\n    lpAddresses: {\n      97: '',\n      43114: '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n    },\n    tokenSymbol: 'USDC',\n    tokenAddresses: {\n      97: '',\n      43114: '0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 9,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'DAI.e',\n    lpAddresses: {\n      97: '',\n      43114: '0x63abe32d0ee76c05a11838722a63e012008416e6',\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      43114: '0xd586e7f844cea2f87f50152665bcbc2c279d8d70',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 10,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBTC.e',\n    lpAddresses: {\n      97: '',\n      43114: '0xd5a37dc5c9a396a03dd1136fc76a1a02b1c88ffa',\n    },\n    tokenSymbol: 'WBTC',\n    tokenAddresses: {\n      97: '',\n      43114: '0x50b7545627a5162F82A992c33b87aDc75187B218',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n\n  {\n    pid: 11,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WETH.e',\n    lpAddresses: {\n      97: '',\n      43114: '0xfe15c2695f1f920da45c30aae47d11de51007af9',\n    },\n    tokenSymbol: 'WETH',\n    tokenAddresses: {\n      97: '',\n      43114: '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n\n\n\n  {\n    pid: 12,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'PNG',\n    lpAddresses: {\n      97: '',\n      43114: '0x3daf1c6268362214ebb064647555438c6f365f96',\n    },\n    tokenSymbol: 'PNG',\n    tokenAddresses: {\n      97: '',\n      43114: '0x60781C2586D68229fde47564546784ab3fACA982',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 13,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'JOE',\n    lpAddresses: {\n      97: '',\n      43114: '0x67926d973cd8ee876ad210faaf7dffa99e414acf',\n    },\n    tokenSymbol: 'JOE',\n    tokenAddresses: {\n      97: '',\n      43114: '0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n\n  {\n    pid: 14,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'LINK.e',\n    lpAddresses: {\n      97: '',\n      43114: '0x6f3a0c89f611ef5dc9d96650324ac633d02265d3',\n    },\n    tokenSymbol: 'LINK',\n    tokenAddresses: {\n      97: '',\n      43114: '0x5947BB275c521040051D82396192181b413227A3',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 15,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'SUSHI.e',\n    lpAddresses: {\n      97: '',\n      43114: '0xF62381AFFdfd27Dba91A1Ea2aCf57d426E28c341',\n    },\n    tokenSymbol: 'SUSHI',\n    tokenAddresses: {\n      97: '',\n      43114: '0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n\n  {\n    pid: 16,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'GB',\n    lpAddresses: {\n      97: '',\n      43114: '0xe8005e4e174a569246c69cec04eabc4c9caa75ec',\n    },\n    tokenSymbol: 'GB',\n    tokenAddresses: {\n      97: '',\n      43114: '0x90842eb834cFD2A1DB0b1512B254a18E4D396215',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 17,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'YAK',\n    lpAddresses: {\n      97: '',\n      43114: '0xb5c9e891af3063004a441ba4fab4ca3d6deb5626',\n    },\n    tokenSymbol: 'YAK',\n    tokenAddresses: {\n      97: '',\n      43114: '0x59414b3089ce2AF0010e7523Dea7E2b35d776ec7',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 18,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'QI',\n    lpAddresses: {\n      97: '',\n      43114: '0x2774516897ac629ad3ed9dcac7e375dda78412b9',\n    },\n    tokenSymbol: 'QI',\n    tokenAddresses: {\n      97: '',\n      43114: '0x8729438EB15e2C8B576fCc6AeCdA6A148776C0F5',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n]\n\nexport default farms\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Robot', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  // ZHCN,\n  // ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://www.traderjoexyz.com/#/trade?outputCurrency=0xd47531Df3457EC73Bb11cBEd1bf2fBFB8496a1B2',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://www.traderjoexyz.com/#/pool/AVAX/0xd47531Df3457EC73Bb11cBEd1bf2fBFB8496a1B2',\n      },\n    ],\n  },\n  {\n    label: 'Caves',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Firepit',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: 'Referrals',\n    icon: 'GroupsIcon',\n    href: '/referrals',\n  },\n  {\n    label: 'Mammothia NFTs',\n    icon: 'NftIcon',\n    href: '/nft',\n  },\n\n  {\n    label: 'Audit',\n    icon: 'AuditIcon',\n    href: 'https://github.com/MammothFinanceAVAX/contracts-audit',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'GitBook',\n        href: 'http://financemammoth.gitbook.io/mammoth-finance/',\n      }\n    ],\n  }\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config}\n      priceLink={`https://www.traderjoexyz.com/#/trade?outputCurrency=${getCakeAddress()}`}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\n\n\nexport interface FarmsProps{\n    tokenMode?: boolean\n}\n\nconst ComingSoon: React.FC = () => {\n    return (\n        <Page>\n            <Heading as=\"h1\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center', fontSize:'5em'}}>\n                Coming Soon!\n            </Heading>\n\n             <img src=\"/images/egg/banner.png\" alt=\"illustration\" style={{width:'300px', height: 'auto', margin:'auto', float:'right', top: '20px',right: '1' +\n                     '0px', position: 'absolute'}} />\n        </Page>\n    )\n}\n\nexport default ComingSoon\n","import React, {useEffect, Suspense, lazy, useState} from 'react'\nimport {BrowserRouter as Router, HashRouter, Redirect, Route, Switch, useLocation} from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport ComingSoon from \"./views/ComingSoon\";\nimport Referral from \"./views/Referral\";\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nfunction getParams(location) {\n    const searchParams = new URLSearchParams(location.search);\n    return {\n        query: searchParams.get('query') || '',\n    };\n}\n\nconst App: React.FC = (props) => {\n  const { account, connect } = useWallet()\n    // const { location } = props;\n    // const { query } = getParams(location);\n\n    useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n    }, [account, connect])\n\n\n\n  useFetchPublicData()\n\n\n  return (\n    <HashRouter>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode/>\n            </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n             <Route path=\"/nft\">\n              <ComingSoon />\n             </Route>\n              <Route path=\"/referrals\">\n                  <Referral />\n              </Route>\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </HashRouter>\n  )\n}\n\nexport default React.memo(App)\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n"],"sourceRoot":""}